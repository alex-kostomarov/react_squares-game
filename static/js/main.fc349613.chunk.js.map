{"version":3,"sources":["modal/Modal.jsx","App.jsx","index.tsx"],"names":["Modal","active","setActive","content","closeModal","window","location","reload","className","onClick","App","useState","delay","setDelay","isGameStart","setIsGameStart","playerScore","setPlayerScore","playerClicked","setPlayerClicked","computerScore","setComputerScore","modalActive","setModalActive","gameOverMsg","setGameOverMsg","intermediateResult","setIntermediateResult","activeCellID","setActiveCellID","createBoard","size","cells","i","push","board","setBoard","boardRefresh","activeCell","Math","floor","random","handlePlayerClick","useEffect","interval","setInterval","clearInterval","map","cell","onSubmit","e","preventDefault","type","placeholder","value","onChange","event","newDelayValue","target","setSpeed","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc349613.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport './Modal.scss';\n\nexport const Modal = ({ active, setActive, content }) => {\n  const closeModal = () => {\n    setActive(false);\n    window.location.reload();\n  };\n\n  return (\n    <div\n      className={active ? \"Modal Modal--active\" : \"Modal\"}\n      onClick={closeModal}\n    >\n      <div className=\"Modal__content\">\n        {content}\n      </div>\n\n      <button\n        className=\"Modal__closeButton\"\n        onClick={closeModal}\n      >\n        X\n      </button>\n    </div>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { Modal } from './modal/Modal';\n\nexport const App = () => {\n  const boardSize = 10;\n  const [delay, setDelay] = useState(1000);\n  const [isGameStart, setIsGameStart] = useState(false);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [playerClicked, setPlayerClicked] = useState(true);\n  const [computerScore, setComputerScore] = useState(0);\n  const [modalActive, setModalActive] = useState(false);\n  const [gameOverMsg, setGameOverMsg] = useState('');\n  const [intermediateResult, setIntermediateResult] = useState(false);\n  const [activeCellID, setActiveCellID] = useState(-1);\n\n  const createBoard = (size) => {\n    const cells = [];\n\n    for (let i = 0; i < size * size; i += 1) {\n      cells.push(<div className=\"App__cell\"></div>);\n    }\n\n    return cells;\n  };\n\n  const [board, setBoard] = useState(createBoard(boardSize));\n\n  const boardRefresh = () => {\n    if (isGameStart) {\n      if (playerScore > 9 || computerScore > 9) {\n        playerScore > 9 ? setGameOverMsg(\"You win\") : setGameOverMsg(\"You lose\")\n        setModalActive(true);\n        setIsGameStart(false);\n\n        return;\n      }\n\n      const cells = createBoard(boardSize);\n\n      if (intermediateResult) {\n        cells[activeCellID] = (\n          <div className={playerClicked\n            ? 'App__cell App__cell--clicked'\n            : 'App__cell App__cell--unclicked'}\n          >\n          </div>\n        );\n\n        setIntermediateResult(false);\n      } else {\n        if (!playerClicked) {\n          setComputerScore(computerScore + 1);\n        }\n\n        const activeCell = Math.floor(Math.random() * (boardSize * boardSize));\n\n        setActiveCellID(activeCell);\n\n        cells[activeCell] = <div className=\"App__cell App__cell--active\" onClick={handlePlayerClick}></div>;\n\n        setIntermediateResult(true);\n      }\n\n      setPlayerClicked(false);\n      setBoard(cells);\n    }\n  };\n\n  const startGame = () => {\n    setIsGameStart(true);\n  };\n\n  const handlePlayerClick = () => {\n    setPlayerScore(playerScore + 1);\n    setPlayerClicked(true);\n  };\n\n  const setSpeed = (event) => {\n    const newDelayValue = event.target.value;\n\n    if (newDelayValue > 0) {\n      setDelay(newDelayValue);\n    }\n  }\n\n  useEffect(() => {\n    const interval = playerClicked\n      ? setInterval(boardRefresh, 0)\n      : setInterval(boardRefresh, delay);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isGameStart, board, playerClicked]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__board\">\n        {board.map(cell => cell)}\n      </div>\n\n      <form className=\"App__form\" onSubmit={e => e.preventDefault()}>\n        <span>Set speed in ms: </span>\n        \n        <input\n          type=\"number\"\n          className=\"App__input\"\n          placeholder=\"Enter delay time in ms\"\n          value={delay === 0 ? '' : delay}\n          onChange={event => setSpeed(event)}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"App__button\"\n          onClick={startGame}\n        >\n          Start\n        </button>\n      </form>\n\n      <div className=\"App__scoreList\">\n        playerScore:&nbsp;\n        {playerScore}\n\n        <br />\n\n        computerScore:&nbsp;\n        {computerScore}\n      </div>\n\n      <Modal\n        active={modalActive}\n        setActive={setModalActive}\n        content={gameOverMsg}\n        reset={boardRefresh}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}