{"version":3,"sources":["modal/Modal.jsx","App.jsx","index.tsx"],"names":["Modal","active","setActive","content","className","onClick","App","useState","delay","setDelay","isGameStart","setIsGameStart","playerScore","setPlayerScore","playerClicked","setPlayerClicked","computerScore","setComputerScore","modalActive","setModalActive","gameOverMsg","setGameOverMsg","createBoard","size","cells","i","push","board","setBoard","boardRefresh","Math","floor","random","handlePlayerClick","useEffect","interval","setInterval","clearInterval","map","cell","onSubmit","e","preventDefault","type","placeholder","value","onChange","Number","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAIaA,EAAQ,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACzC,OACE,qBACEC,UAAWH,EAAS,sBAAwB,QAC5CI,QAAS,kBAAMH,GAAU,IAF3B,SAIE,qBAAKE,UAAU,iBAAf,SACGD,OCNIG,EAAM,WACjB,IACA,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0CN,oBAAS,GAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAA0CR,oBAAU,GAApD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAsCV,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAsCZ,mBAAS,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KAEMC,EAAc,SAACC,GAGnB,IAFA,IAAMC,EAAQ,GAELC,EAAI,EAAGA,EAAIF,EAAOA,EAAME,GAAK,EACpCD,EAAME,KAAK,qBAAKtB,UAAU,eAG5B,OAAOoB,GAGT,EAA0BjB,mBAASe,EAnBjB,KAmBlB,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAe,WACnB,GAAInB,EAAa,CACf,GAAIE,EAAc,GAAKI,EAAgB,EAQrC,OAPkBK,EAAlBT,EAAc,EAAmB,UAA4B,YAC7DO,GAAe,GACfR,GAAe,GACfE,EAAe,GACfI,EAAiB,QACjBR,EAAS,GAKNK,GACHG,EAAiBD,EAAgB,GAGnCD,GAAiB,GAEjB,IAAMS,EAAQF,EAxCA,IA2CdE,EAFmBM,KAAKC,MAAM,IAAAD,KAAKE,WAEf,qBAAK5B,UAAU,8BAA8BC,QAAS4B,IAC1EL,EAASJ,KAQPS,EAAoB,WACxBpB,EAAeD,EAAc,GAC7BG,GAAiB,IAWnB,OARAmB,qBAAU,WACR,IAAMC,EAAWC,YAAYP,EAAcrB,GAE3C,OAAO,WACL6B,cAAcF,MAEf,CAACzB,EAAaiB,EAAOb,EAAeF,IAGrC,sBAAKR,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACGuB,EAAMW,KAAI,SAAAC,GAAI,OAAIA,OAGrB,uBAAMnC,UAAU,aAAaoC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAA9C,UACE,uBACEC,KAAK,SACLvC,UAAU,aACVwC,YAAY,yBACZC,MAAiB,IAAVrC,EAAc,GAAKA,EAC1BsC,SAAU,SAAAL,GAAC,OAAIhC,EAASsC,OAAON,EAAEO,OAAOH,WAG1C,wBACEF,KAAK,SACLvC,UAAU,cACVC,QAnCU,WAChBM,GAAe,IA+BX,sBASDD,GACC,sBAAKN,UAAU,iBAAf,yBAEGQ,EAED,uBAJF,iBAOGI,KAIL,cAAC,EAAD,CACEf,OAAQiB,EACRhB,UAAWiB,EACXhB,QAASiB,QCzGjB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0dc47c1b.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport './Modal.scss';\n\nexport const Modal = ({ active, setActive, content }) => {\n  return (\n    <div\n      className={active ? \"Modal Modal--active\" : \"Modal\"}\n      onClick={() => setActive(false)}\n    >\n      <div className=\"Modal__content\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { Modal } from './modal/Modal';\n\nexport const App = () => {\n  const boardSize = 10;\n  const [delay, setDelay] = useState(0);\n  const [isGameStart, setIsGameStart] = useState(false);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [playerClicked, setPlayerClicked] = useState(false);\n  const [computerScore, setComputerScore] = useState(-1);\n  const [modalActive, setModalActive] = useState(false);\n  const [gameOverMsg, setGameOverMsg] = useState('');\n\n  const createBoard = (size) => {\n    const cells = [];\n\n    for (let i = 0; i < size * size; i += 1) {\n      cells.push(<div className=\"App__cell\"></div>);\n    }\n\n    return cells;\n  };\n\n  const [board, setBoard] = useState(createBoard(boardSize));\n\n  const boardRefresh = () => {\n    if (isGameStart) {\n      if (playerScore > 9 || computerScore > 9) {\n        playerScore > 9 ? setGameOverMsg(\"You win\") : setGameOverMsg(\"You lose\")\n        setModalActive(true);\n        setIsGameStart(false);\n        setPlayerScore(0);\n        setComputerScore(0);\n        setDelay(0);\n\n        return;\n      }\n\n      if (!playerClicked) {\n        setComputerScore(computerScore + 1);\n      }\n\n      setPlayerClicked(false);\n\n      const cells = createBoard(boardSize);\n      const activeCell = Math.floor(Math.random() * (boardSize * boardSize));\n\n      cells[activeCell] = <div className=\"App__cell App__cell--active\" onClick={handlePlayerClick}></div>;\n      setBoard(cells);\n    }\n  };\n\n  const startGame = () => {\n    setIsGameStart(true);\n  };\n\n  const handlePlayerClick = () => {\n    setPlayerScore(playerScore + 1);\n    setPlayerClicked(true);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(boardRefresh, delay);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isGameStart, board, playerClicked, playerScore]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__board\">\n        {board.map(cell => cell)}\n      </div>\n\n      <form className=\"App__input\" onSubmit={e => e.preventDefault()}>\n        <input\n          type=\"number\"\n          className=\"App__input\"\n          placeholder=\"Enter delay time in ms\"\n          value={delay === 0 ? \"\" : delay}\n          onChange={e => setDelay(Number(e.target.value))}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"App__button\"\n          onClick={startGame}\n        >\n          Start\n        </button>\n      </form>\n\n      {isGameStart && (\n        <div className=\"App__scoreList\">\n          playerScore:\n          {playerScore}\n\n          <br />\n\n          computerScore:\n          {computerScore}\n        </div>\n      )}\n\n      <Modal\n        active={modalActive}\n        setActive={setModalActive}\n        content={gameOverMsg}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}